<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jms="http://www.springframework.org/schema/jms" xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd"
  default-lazy-init="true">
  
  <bean id="rtsOriginReceiver" class="tst.RtsOriginReceiver">
  </bean>



  <jms:listener-container 
    container-type="default"
    connection-factory="jmsConnectionFactory" 
    destination-resolver="destinationResolver"
    destination-type="topic" 
    concurrency="1">
    <jms:listener id="locationListenerContainer" destination="rts.*" ref="rtsOriginReceiver" />
  </jms:listener-container>



  <!-- Spring JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      <bean class="org.springframework.jms.connection.CachingConnectionFactory" destroy-method="destroy">
        <constructor-arg ref="jmsConnectionFactory" />
      </bean>
    </property>
    <property name="destinationResolver">
      <ref local="destinationResolver" />
    </property>
    <property name="pubSubDomain" value="true" />
  </bean>

  <!-- ConnectionFactory Definition -->
  <bean id="targetConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiTemplate" ref="jndiTemplate" />
    <property name="jndiName" value="jms/RemoteConnectionFactory" />
  </bean>

  <bean id="jmsConnectionFactory" class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
    <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
    <property name="username" value="jopens"/>
    <property name="password" value="jopens10$"/>
  </bean>

  <bean id="destinationResolver" class="org.springframework.jms.support.destination.JndiDestinationResolver">
    <property name="jndiTemplate" ref="jndiTemplate" />
    <property name="cache" value="true" />
    <!-- do not create a dynamic destination if the destination name is not found in JNDI -->
    <property name="fallbackToDynamicDestination" value="false" />
  </bean>

  <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
    <property name="environment">
      <props>
        <prop key="java.naming.factory.initial">org.jboss.naming.remote.client.InitialContextFactory</prop>
        <prop key="java.naming.provider.url">http-remoting://10.88.5.48:8080</prop>
        <prop key="java.naming.security.principal">jopens</prop>
        <prop key="java.naming.security.credentials">jopens10$</prop>
      </props>
    </property>
  </bean>
</beans>


